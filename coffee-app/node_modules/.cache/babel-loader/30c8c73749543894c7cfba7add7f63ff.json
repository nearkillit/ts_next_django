{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/coffee-app/src/views/OrderFinish.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\nimport { Card } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from \"react-redux\"; // test\n\nimport labelmake from \"labelmake\"; // import { Email } from \"../module/smtp\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderFinish = () => {\n  _s();\n\n  const [receiptPDF, setReceiptPDF] = useState('');\n  const state = useSelector(state => state);\n  const history = useHistory();\n\n  const handleLink = path => history.push(path); // 購入確認メール\n\n\n  var Email = {\n    send: function (a) {\n      return new Promise(function (n, e) {\n        a.nocache = Math.floor(1e6 * Math.random() + 1), a.Action = \"Send\";\n        var t = JSON.stringify(a);\n        Email.ajaxPost(\"https://smtpjs.com/v3/smtpjs.aspx?\", t, function (e) {\n          n(e);\n        });\n      });\n    },\n    ajaxPost: function (e, n, t) {\n      var a = Email.createCORSRequest(\"POST\", e);\n      a.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\"), a.onload = function () {\n        var e = a.responseText;\n        null != t && t(e);\n      }, a.send(n);\n    },\n    ajax: function (e, n) {\n      var t = Email.createCORSRequest(\"GET\", e);\n      t.onload = function () {\n        var e = t.responseText;\n        null != n && n(e);\n      }, t.send();\n    },\n    createCORSRequest: function (e, n) {\n      var t = new XMLHttpRequest();\n      return \"withCredentials\" in t ? t.open(e, n, !0) : \"undefined\" != typeof XDomainRequest ? (t = new XDomainRequest()).open(e, n) : t = null, t;\n    }\n  };\n\n  const sendMail = () => {\n    Email.send({\n      // a : \"smtp.elasticemail.com\",\n      // s : \"massurumatsuyama@gmail.com\",\n      // r : \"FEDE3004834FF9BD93BB2E0B608BAC824058\",\n      // t : 'kirito.shimura@rakus-partners.co.jp',\n      // e : \"massurumatsuyama@gmail.com\",\n      // t : \"This is the subject\",\n      // n : \"And this is the body\"\n      Host: \"smtp.elasticemail.com\",\n      Username: \"massurumatsuyama@gmail.com\",\n      Password: \"FEDE3004834FF9BD93BB2E0B608BAC824058\",\n      To: 'kirito.shimura@rakus-partners.co.jp',\n      From: \"massurumatsuyama@gmail.com\",\n      Subject: \"This is the subject\",\n      Body: \"And this is the body\"\n    }).then(message => alert(message));\n  }; // 領収書PDF\n\n\n  const MakeReceipt = async () => {\n    // You can also use Uint8Array or ArrayBuffer as a basePdf\n    // const basePdf = fs.readFileSync(\"path/to/your.pdf\")\n    // const basePdf = await fetch(\"path/to/your.pdf\").then((res) => res.arrayBuffer());\n    const template = {\n      \"schemas\": [{\n        \"field1\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 20\n          },\n          \"width\": 150,\n          \"height\": 15,\n          \"alignment\": \"center\",\n          \"fontSize\": 30,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n        },\n        \"field2\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 35\n          },\n          \"width\": 150,\n          \"height\": 10,\n          \"alignment\": \"center\",\n          \"fontSize\": 20,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n        },\n        \"field3\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 45\n          },\n          \"width\": 150,\n          \"height\": 200,\n          \"alignment\": \"left\",\n          \"fontSize\": 12,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n        }\n      }]\n    };\n    const inputs = [{\n      \"field1\": \"領収書\",\n      \"field2\": \"決済内容\",\n      \"field3\": \"text\"\n    }];\n    const pdf = await labelmake({\n      template,\n      inputs\n    }); // Browser\n\n    const blob = new Blob([pdf.buffer], {\n      type: \"application/pdf\"\n    });\n    console.log(URL.createObjectURL(blob));\n    setReceiptPDF(URL.createObjectURL(blob));\n  };\n\n  useEffect(() => {// MakeReceipt()\n    // sendMail()\n  }, []);\n  useEffect(() => {\n    if (!state.user.uid) {// handleLink('/') \n    }\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://smtpjs.com/v3/smtp.js\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMail,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\u6C7A\\u6E08\\u304C\\u5B8C\\u4E86\\u3057\\u307E\\u3057\\u305F\\uFF01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u3053\\u306E\\u5EA6\\u306F\\u3054\\u6CE8\\u6587\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3059\\u3002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), receiptPDF !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: receiptPDF,\n              children: \"\\u9818\\u53CE\\u66F8\\u3092\\u8868\\u793A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            component: Link,\n            to: \"/\",\n            children: \"\\u30C8\\u30C3\\u30D7\\u753B\\u9762\\u3092\\u8868\\u793A\\u3059\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderFinish, \"0ChPsmJ/UJE9vMmhWc19sQjpWHw=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c = OrderFinish;\nexport default OrderFinish;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderFinish\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/coffee-app/src/views/OrderFinish.js"],"names":["Button","Link","Grid","Card","useEffect","useState","useHistory","useSelector","labelmake","OrderFinish","receiptPDF","setReceiptPDF","state","history","handleLink","path","push","Email","send","a","Promise","n","e","nocache","Math","floor","random","Action","t","JSON","stringify","ajaxPost","createCORSRequest","setRequestHeader","onload","responseText","ajax","XMLHttpRequest","open","XDomainRequest","sendMail","Host","Username","Password","To","From","Subject","Body","then","message","alert","MakeReceipt","template","inputs","pdf","blob","Blob","buffer","type","console","log","URL","createObjectURL","user","uid"],"mappings":"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","sourcesContent":["import { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\nimport { Card } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n// test\nimport labelmake from \"labelmake\";\n// import { Email } from \"../module/smtp\"\n\nconst OrderFinish = () => {\n  const [ receiptPDF, setReceiptPDF ] = useState('')\n  const state = useSelector(state => state);\n  const history = useHistory()\n  const handleLink = path => history.push(path)\n\n  // 購入確認メール\n  var Email = { send: function (a) { return new Promise(function (n, e) { a.nocache = Math.floor(1e6 * Math.random() + 1), a.Action = \"Send\"; var t = JSON.stringify(a); Email.ajaxPost(\"https://smtpjs.com/v3/smtpjs.aspx?\", t, function (e) { n(e) }) }) }, ajaxPost: function (e, n, t) { var a = Email.createCORSRequest(\"POST\", e); a.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\"), a.onload = function () { var e = a.responseText; null != t && t(e) }, a.send(n) }, ajax: function (e, n) { var t = Email.createCORSRequest(\"GET\", e); t.onload = function () { var e = t.responseText; null != n && n(e) }, t.send() }, createCORSRequest: function (e, n) { var t = new XMLHttpRequest; return \"withCredentials\" in t ? t.open(e, n, !0) : \"undefined\" != typeof XDomainRequest ? (t = new XDomainRequest).open(e, n) : t = null, t } };\n  \n  const sendMail = () => {\n    Email.send({\n      // a : \"smtp.elasticemail.com\",\n      // s : \"massurumatsuyama@gmail.com\",\n      // r : \"FEDE3004834FF9BD93BB2E0B608BAC824058\",\n      // t : 'kirito.shimura@rakus-partners.co.jp',\n      // e : \"massurumatsuyama@gmail.com\",\n      // t : \"This is the subject\",\n      // n : \"And this is the body\"\n      Host : \"smtp.elasticemail.com\",\n      Username : \"massurumatsuyama@gmail.com\",\n      Password : \"FEDE3004834FF9BD93BB2E0B608BAC824058\",\n      To : 'kirito.shimura@rakus-partners.co.jp',\n      From : \"massurumatsuyama@gmail.com\",\n      Subject : \"This is the subject\",\n      Body : \"And this is the body\"\n    }).then(\n      message => alert(message)\n    )\n  }\n\n  // 領収書PDF\n  const MakeReceipt =  async () => {\n    // You can also use Uint8Array or ArrayBuffer as a basePdf\n    // const basePdf = fs.readFileSync(\"path/to/your.pdf\")\n    // const basePdf = await fetch(\"path/to/your.pdf\").then((res) => res.arrayBuffer());\n    const template = {\n    \"schemas\": [\n      {\n        \"field1\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 20\n          },\n          \"width\": 150,\n          \"height\": 15,\n          \"alignment\": \"center\",\n          \"fontSize\": 30,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n        },\n        \"field2\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 35\n          },\n          \"width\": 150,\n          \"height\": 10,\n          \"alignment\": \"center\",\n          \"fontSize\": 20,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n        },\n        \"field3\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 45\n          },\n          \"width\": 150,\n          \"height\": 200,\n          \"alignment\": \"left\",\n          \"fontSize\": 12,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n          }\n        }\n      ]\n    }\n    const inputs = [{\"field1\":\"領収書\",\"field2\":\"決済内容\",\"field3\":\"text\"}];\n    const pdf = await labelmake({ template, inputs });    \n    \n    // Browser\n    const blob = new Blob([pdf.buffer], { type: \"application/pdf\" });    \n    console.log(URL.createObjectURL(blob))\n    setReceiptPDF(URL.createObjectURL(blob))\n\n  }\n\n  useEffect(()=>{\n    // MakeReceipt()\n    // sendMail()\n  },[])\n\n  useEffect(()=>{\n    if(!state.user.uid){\n      // handleLink('/') \n    }\n  },[state.user])\n\n    return (\n        <div>\n          <script src=\"https://smtpjs.com/v3/smtp.js\">\n            <button onClick={sendMail}>send</button>\n          </script>\n          <Grid container alignItems=\"center\" >\n             <Grid item xs={8}>\n               <Card>\n                <h1>決済が完了しました！</h1>\n                <p>この度はご注文ありがとうございます。</p>\n                {receiptPDF !== '' && <p><a href={receiptPDF}>領収書を表示</a></p>}\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            component={Link}\n                            to=\"/\"\n                            >\n                            トップ画面を表示する\n                    </Button>\n                 </Card>\n             </Grid>   \n          </Grid>\n        </div>        \n    )\n}\n\nexport default OrderFinish"]},"metadata":{},"sourceType":"module"}
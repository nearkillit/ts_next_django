{"ast":null,"code":"import labelmake from \"labelmake\";\nimport font_GenShinGothic from \"../module/font_GenShinGothic\";\nconst font = {\n  font_GenShinGothic\n}; // 領収書PDF\n\nexport const MakeReceipt = async () => {\n  const template = {\n    fontName: \"font_GenShinGothic\",\n    basePdf: {\n      width: 210,\n      height: 297\n    },\n    \"schemas\": [{\n      \"field1\": {\n        \"type\": \"text\",\n        \"position\": {\n          \"x\": 20,\n          \"y\": 20\n        },\n        \"width\": 150,\n        \"height\": 15,\n        \"alignment\": \"center\",\n        \"fontSize\": 30,\n        \"characterSpacing\": 0,\n        \"lineHeight\": 1\n      },\n      \"field2\": {\n        \"type\": \"text\",\n        \"position\": {\n          \"x\": 20,\n          \"y\": 35\n        },\n        \"width\": 150,\n        \"height\": 10,\n        \"alignment\": \"center\",\n        \"fontSize\": 20,\n        \"characterSpacing\": 0,\n        \"lineHeight\": 1\n      },\n      \"field3\": {\n        \"type\": \"text\",\n        \"position\": {\n          \"x\": 20,\n          \"y\": 45\n        },\n        \"width\": 150,\n        \"height\": 200,\n        \"alignment\": \"left\",\n        \"fontSize\": 12,\n        \"characterSpacing\": 0,\n        \"lineHeight\": 1\n      }\n    }]\n  };\n  const inputs = [{\n    \"field1\": \"領収書\",\n    \"field2\": \"決済内容\",\n    \"field3\": \"text\"\n  }];\n  const pdf = await labelmake({\n    template,\n    inputs,\n    font\n  }); // Browser\n\n  const blob = new Blob([pdf.buffer], {\n    type: \"application/pdf\"\n  });\n  console.log(blob);\n  console.log(URL.createObjectURL(blob)); // setReceiptPDF(URL.createObjectURL(blob))\n\n  return URL.createObjectURL(blob);\n};\n_c = MakeReceipt;\nexport const mRtest = async () => {\n  const template = {\n    basePdf: {\n      width: 210,\n      height: 297\n    },\n    schemas: [{\n      field1: {\n        position: {\n          x: 20,\n          y: 20\n        },\n        width: 50,\n        height: 50,\n        fontSize: 30,\n        type: \"text\"\n      },\n      field2: {\n        position: {\n          x: 20,\n          y: 35\n        },\n        width: 50,\n        height: 50,\n        fontSize: 20,\n        type: \"text\"\n      }\n    }]\n  };\n  const inputs = [{\n    field1: \"aa\",\n    field2: \"aaaaaaaaaaaa\"\n  }, {\n    field1: \"bb\",\n    field2: \"bbbbbbbbbbbb\"\n  }];\n  const pdf = await labelmake({\n    template,\n    inputs\n  });\n  const blob = new Blob([pdf.buffer], {\n    type: \"application/pdf\"\n  });\n  console.log(blob);\n  console.log(URL.createObjectURL(blob));\n  return URL.createObjectURL(blob);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeReceipt\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/coffee-app/src/components/MakeRecipt.js"],"names":["labelmake","font_GenShinGothic","font","MakeReceipt","template","fontName","basePdf","width","height","inputs","pdf","blob","Blob","buffer","type","console","log","URL","createObjectURL","mRtest","schemas","field1","position","x","y","fontSize","field2"],"mappings":"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","sourcesContent":["import labelmake from \"labelmake\";\nimport font_GenShinGothic from \"../module/font_GenShinGothic\"\n \nconst font = { font_GenShinGothic };\n\n // 領収書PDF\nexport const MakeReceipt =  async () => {\n    const template = {\n      fontName: \"font_GenShinGothic\",\n      basePdf: { width: 210, height: 297 },\n      \"schemas\": [\n      {\n        \"field1\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 20\n          },\n          \"width\": 150,\n          \"height\": 15,\n          \"alignment\": \"center\",\n          \"fontSize\": 30,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n        },\n        \"field2\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 35\n          },\n          \"width\": 150,\n          \"height\": 10,\n          \"alignment\": \"center\",\n          \"fontSize\": 20,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n        },\n        \"field3\": {\n          \"type\": \"text\",\n          \"position\": {\n            \"x\": 20,\n            \"y\": 45\n          },\n          \"width\": 150,\n          \"height\": 200,\n          \"alignment\": \"left\",\n          \"fontSize\": 12,\n          \"characterSpacing\": 0,\n          \"lineHeight\": 1\n          }\n        }\n      ]\n    }\n    const inputs = [{\"field1\":\"領収書\",\"field2\":\"決済内容\",\"field3\":\"text\"}];\n    const pdf = await labelmake({ template, inputs, font });    \n    \n    // Browser\n    const blob = new Blob([pdf.buffer], { type: \"application/pdf\" });\n    console.log(blob);    \n    console.log(URL.createObjectURL(blob))\n    // setReceiptPDF(URL.createObjectURL(blob))\n    return URL.createObjectURL(blob)\n  }\n\nexport const mRtest = async () => {\n  const template = {\n    basePdf: { width: 210, height: 297 },\n    schemas: [\n      {\n        field1: {\n          position: { x: 20, y: 20 },\n          width: 50,\n          height: 50,\n          fontSize: 30,\n          type: \"text\"\n        },\n        field2: {\n          position: { x: 20, y: 35 },\n          width: 50,\n          height: 50,\n          fontSize: 20,\n          type: \"text\"\n        }\n      }\n    ]\n  };\n  const inputs = [\n    { field1: \"aa\", field2: \"aaaaaaaaaaaa\" },\n    { field1: \"bb\", field2: \"bbbbbbbbbbbb\" }\n  ];\n  const pdf = await labelmake({ template, inputs });\n  const blob = new Blob([pdf.buffer], { type: \"application/pdf\" });\n  console.log(blob)\n  console.log(URL.createObjectURL(blob))\n  return URL.createObjectURL(blob)\n}\n"]},"metadata":{},"sourceType":"module"}
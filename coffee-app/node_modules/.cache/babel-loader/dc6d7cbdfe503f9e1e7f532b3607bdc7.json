{"ast":null,"code":"const _ = require('lodash');\n\nclass Schema {\n  constructor(schema = {}, dependencies = {}) {\n    if (dependencies.logger) {\n      this.logger = dependencies.logger;\n    }\n\n    if (schema.config) {\n      const config = _.cloneDeep(schema.config);\n\n      this.setter(config);\n    }\n\n    if (schema.data) {\n      const data = schema.data();\n      this.setter(data);\n    }\n\n    if (schema.events) {\n      this.setter(schema.events);\n    }\n  }\n\n  setter(object = {}) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (typeof value === 'function') {\n        value.bind(this);\n      }\n\n      this[key] = value;\n    });\n  }\n\n  static factory(schema, dependencies = {}) {\n    return new Schema(schema, dependencies);\n  }\n\n}\n\nmodule.exports = Schema;","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/coffee-app/node_modules/smtpjs/src/smtp/schema/Schema.js"],"names":["_","require","Schema","constructor","schema","dependencies","logger","config","cloneDeep","setter","data","events","object","Object","entries","forEach","key","value","bind","factory","module","exports"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAMC,MAAN,CAAa;AACXC,EAAAA,WAAW,CAAEC,MAAM,GAAG,EAAX,EAAeC,YAAY,GAAG,EAA9B,EAAkC;AAC3C,QAAIA,YAAY,CAACC,MAAjB,EAAyB;AACvB,WAAKA,MAAL,GAAcD,YAAY,CAACC,MAA3B;AACD;;AAED,QAAIF,MAAM,CAACG,MAAX,EAAmB;AACjB,YAAMA,MAAM,GAAGP,CAAC,CAACQ,SAAF,CAAYJ,MAAM,CAACG,MAAnB,CAAf;;AACA,WAAKE,MAAL,CAAYF,MAAZ;AACD;;AAED,QAAIH,MAAM,CAACM,IAAX,EAAiB;AACf,YAAMA,IAAI,GAAGN,MAAM,CAACM,IAAP,EAAb;AACA,WAAKD,MAAL,CAAYC,IAAZ;AACD;;AAED,QAAIN,MAAM,CAACO,MAAX,EAAmB;AACjB,WAAKF,MAAL,CAAYL,MAAM,CAACO,MAAnB;AACD;AACF;;AAEDF,EAAAA,MAAM,CAAEG,MAAM,GAAG,EAAX,EAAe;AACnBC,IAAAA,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBG,OAAvB,CAA+B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAC/C,UAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC/BA,QAAAA,KAAK,CAACC,IAAN,CAAW,IAAX;AACD;;AAED,WAAKF,GAAL,IAAYC,KAAZ;AACD,KAND;AAOD;;AAEa,SAAPE,OAAO,CAAEf,MAAF,EAAUC,YAAY,GAAG,EAAzB,EAA6B;AACzC,WAAO,IAAIH,MAAJ,CAAWE,MAAX,EAAmBC,YAAnB,CAAP;AACD;;AAjCU;;AAoCbe,MAAM,CAACC,OAAP,GAAiBnB,MAAjB","sourcesContent":["const _ = require('lodash')\n\nclass Schema {\n  constructor (schema = {}, dependencies = {}) {\n    if (dependencies.logger) {\n      this.logger = dependencies.logger\n    }\n\n    if (schema.config) {\n      const config = _.cloneDeep(schema.config)\n      this.setter(config)\n    }\n\n    if (schema.data) {\n      const data = schema.data()\n      this.setter(data)\n    }\n\n    if (schema.events) {\n      this.setter(schema.events)\n    }\n  }\n\n  setter (object = {}) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (typeof value === 'function') {\n        value.bind(this)\n      }\n\n      this[key] = value\n    })\n  }\n\n  static factory (schema, dependencies = {}) {\n    return new Schema(schema, dependencies)\n  }\n}\n\nmodule.exports = Schema"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/* SmtpJS.com - v3.0.0 */\nvar Email = {\n  send: function (a) {\n    return new Promise(function (n, e) {\n      a.nocache = Math.floor(1e6 * Math.random() + 1), a.Action = \"Send\";\n      var t = JSON.stringify(a);\n      Email.ajaxPost(\"https://smtpjs.com/v3/smtpjs.aspx?\", t, function (e) {\n        n(e);\n      });\n    });\n  },\n  ajaxPost: function (e, n, t) {\n    var a = Email.createCORSRequest(\"POST\", e);\n    a.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\"), a.onload = function () {\n      var e = a.responseText;\n      null != t && t(e);\n    }, a.send(n);\n  },\n  ajax: function (e, n) {\n    var t = Email.createCORSRequest(\"GET\", e);\n    t.onload = function () {\n      var e = t.responseText;\n      null != n && n(e);\n    }, t.send();\n  },\n  createCORSRequest: function (e, n) {\n    var t = new XMLHttpRequest();\n    return \"withCredentials\" in t ? t.open(e, n, !0) : \"undefined\" != typeof XDomainRequest ? (t = new XDomainRequest()).open(e, n) : t = null, t;\n  }\n}; // 購入確認メール  \n\nexport const sendMail = () => {\n  Email.send({\n    a: \"smtp.elasticemail.com\",\n    s: \"massurumatsuyama@gmail.com\",\n    r: \"0BCB98EDA038FBEA37D524558337807113F7\",\n    e: 'massurumatsuyama@gmail.com',\n    o: \"kirito.shimura@rakus-partners.co.jp\",\n    t: \"This is the subject\",\n    n: \"And this is the body\" //   // Host : \"smtp.elasticemail.com\",\n    //   // Username : \"massurumatsuyama@gmail.com\",\n    //   // Password : \"0BCB98EDA038FBEA37D524558337807113F7\",\n    //   // To :  \"kirito.shimura@rakus-partners.co.jp\",\n    //   // From : 'massurumatsuyama@gmail.com',\n    //   // Subject : \"This is the subject\",\n    //   // Body : \"And this is the body\"\n\n  }).then(message => alert(message));\n};","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/coffee-app/src/components/SendMail.js"],"names":["Email","send","a","Promise","n","e","nocache","Math","floor","random","Action","t","JSON","stringify","ajaxPost","createCORSRequest","setRequestHeader","onload","responseText","ajax","XMLHttpRequest","open","XDomainRequest","sendMail","s","r","o","then","message","alert"],"mappings":"AAAA;AACA,IAAIA,KAAK,GAAG;AAAEC,EAAAA,IAAI,EAAE,UAAUC,CAAV,EAAa;AAAE,WAAO,IAAIC,OAAJ,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAEH,MAAAA,CAAC,CAACI,OAAF,GAAYC,IAAI,CAACC,KAAL,CAAW,MAAMD,IAAI,CAACE,MAAL,EAAN,GAAsB,CAAjC,CAAZ,EAAiDP,CAAC,CAACQ,MAAF,GAAW,MAA5D;AAAoE,UAAIC,CAAC,GAAGC,IAAI,CAACC,SAAL,CAAeX,CAAf,CAAR;AAA2BF,MAAAA,KAAK,CAACc,QAAN,CAAe,oCAAf,EAAqDH,CAArD,EAAwD,UAAUN,CAAV,EAAa;AAAED,QAAAA,CAAC,CAACC,CAAD,CAAD;AAAM,OAA7E;AAAgF,KAA7M,CAAP;AAAuN,GAA9O;AAAgPS,EAAAA,QAAQ,EAAE,UAAUT,CAAV,EAAaD,CAAb,EAAgBO,CAAhB,EAAmB;AAAE,QAAIT,CAAC,GAAGF,KAAK,CAACe,iBAAN,CAAwB,MAAxB,EAAgCV,CAAhC,CAAR;AAA4CH,IAAAA,CAAC,CAACc,gBAAF,CAAmB,cAAnB,EAAmC,mCAAnC,GAAyEd,CAAC,CAACe,MAAF,GAAW,YAAY;AAAE,UAAIZ,CAAC,GAAGH,CAAC,CAACgB,YAAV;AAAwB,cAAQP,CAAR,IAAaA,CAAC,CAACN,CAAD,CAAd;AAAmB,KAA7I,EAA+IH,CAAC,CAACD,IAAF,CAAOG,CAAP,CAA/I;AAA0J,GAArd;AAAude,EAAAA,IAAI,EAAE,UAAUd,CAAV,EAAaD,CAAb,EAAgB;AAAE,QAAIO,CAAC,GAAGX,KAAK,CAACe,iBAAN,CAAwB,KAAxB,EAA+BV,CAA/B,CAAR;AAA2CM,IAAAA,CAAC,CAACM,MAAF,GAAW,YAAY;AAAE,UAAIZ,CAAC,GAAGM,CAAC,CAACO,YAAV;AAAwB,cAAQd,CAAR,IAAaA,CAAC,CAACC,CAAD,CAAd;AAAmB,KAApE,EAAsEM,CAAC,CAACV,IAAF,EAAtE;AAAgF,GAA1mB;AAA4mBc,EAAAA,iBAAiB,EAAE,UAAUV,CAAV,EAAaD,CAAb,EAAgB;AAAE,QAAIO,CAAC,GAAG,IAAIS,cAAJ,EAAR;AAA4B,WAAO,qBAAqBT,CAArB,GAAyBA,CAAC,CAACU,IAAF,CAAOhB,CAAP,EAAUD,CAAV,EAAa,CAAC,CAAd,CAAzB,GAA4C,eAAe,OAAOkB,cAAtB,GAAuC,CAACX,CAAC,GAAG,IAAIW,cAAJ,EAAL,EAAyBD,IAAzB,CAA8BhB,CAA9B,EAAiCD,CAAjC,CAAvC,GAA6EO,CAAC,GAAG,IAA7H,EAAmIA,CAA1I;AAA6I;AAA1zB,CAAZ,C,CAGA;;AACA,OAAO,MAAMY,QAAQ,GAAG,MAAM;AAE1BvB,EAAAA,KAAK,CAACC,IAAN,CAAW;AACTC,IAAAA,CAAC,EAAG,uBADK;AAETsB,IAAAA,CAAC,EAAG,4BAFK;AAGTC,IAAAA,CAAC,EAAG,sCAHK;AAITpB,IAAAA,CAAC,EAAG,4BAJK;AAKTqB,IAAAA,CAAC,EAAG,qCALK;AAMTf,IAAAA,CAAC,EAAG,qBANK;AAOTP,IAAAA,CAAC,EAAG,sBAPK,CAQX;AACA;AACA;AACA;AACA;AACA;AACA;;AAdW,GAAX,EAeGuB,IAfH,CAgBEC,OAAO,IAAIC,KAAK,CAACD,OAAD,CAhBlB;AAmBA,CArBG","sourcesContent":["/* SmtpJS.com - v3.0.0 */\nvar Email = { send: function (a) { return new Promise(function (n, e) { a.nocache = Math.floor(1e6 * Math.random() + 1), a.Action = \"Send\"; var t = JSON.stringify(a); Email.ajaxPost(\"https://smtpjs.com/v3/smtpjs.aspx?\", t, function (e) { n(e) }) }) }, ajaxPost: function (e, n, t) { var a = Email.createCORSRequest(\"POST\", e); a.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\"), a.onload = function () { var e = a.responseText; null != t && t(e) }, a.send(n) }, ajax: function (e, n) { var t = Email.createCORSRequest(\"GET\", e); t.onload = function () { var e = t.responseText; null != n && n(e) }, t.send() }, createCORSRequest: function (e, n) { var t = new XMLHttpRequest; return \"withCredentials\" in t ? t.open(e, n, !0) : \"undefined\" != typeof XDomainRequest ? (t = new XDomainRequest).open(e, n) : t = null, t } };\n\n\n// 購入確認メール  \nexport const sendMail = () => {    \n\n    Email.send({\n      a : \"smtp.elasticemail.com\",\n      s : \"massurumatsuyama@gmail.com\",\n      r : \"0BCB98EDA038FBEA37D524558337807113F7\",\n      e : 'massurumatsuyama@gmail.com',\n      o : \"kirito.shimura@rakus-partners.co.jp\",\n      t : \"This is the subject\",\n      n : \"And this is the body\"\n    //   // Host : \"smtp.elasticemail.com\",\n    //   // Username : \"massurumatsuyama@gmail.com\",\n    //   // Password : \"0BCB98EDA038FBEA37D524558337807113F7\",\n    //   // To :  \"kirito.shimura@rakus-partners.co.jp\",\n    //   // From : 'massurumatsuyama@gmail.com',\n    //   // Subject : \"This is the subject\",\n    //   // Body : \"And this is the body\"\n    }).then(\n      message => alert(message)\n    );\n\n   }"]},"metadata":{},"sourceType":"module"}